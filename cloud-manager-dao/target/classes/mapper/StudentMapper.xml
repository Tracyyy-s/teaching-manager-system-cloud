<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gwy.manager.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.gwy.manager.domain.entity.Student" >
    <id column="student_no" property="studentNo" jdbcType="VARCHAR" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR"/>
    <result column="birth" property="birth" jdbcType="DATE" />
    <result column="class_id" property="classId" jdbcType="VARCHAR" />
    <result column="political" property="political" jdbcType="VARCHAR" />
    <result column="dept_id" property="deptId" jdbcType="VARCHAR" />
    <result column="entry_year" property="entryYear" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ts_student
    where student_no = #{studentNo,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.gwy.manager.domain.entity.Student" >
    insert into ts_student (student_no, student_name, password,
      gender, birth, email, class_id,
      political, dept_id, entry_year
      )
    values (#{studentNo,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{gender,jdbcType=INTEGER}, #{birth,jdbcType=DATE}, #{email, jdbcType=VARCHAR}, #{classId,jdbcType=VARCHAR},
      #{political,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR}, #{entryYear,jdbcType=VARCHAR}
    )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.gwy.manager.domain.entity.Student" >
    update ts_student
    <set>
        <if test="studentName != null and studentName != ''">
           student_name = #{studentName,jdbcType=VARCHAR},
        </if>
        <if test="password != null and password != ''">
            password = #{password,jdbcType=VARCHAR},
        </if>
        <if test="gender != null">
            gender = #{gender,jdbcType=INTEGER},
        </if>
        <if test="birth != null">
            birth = #{birth,jdbcType=DATE},
        </if>
        <if test="email != null and email != ''">
            email = #{email, jdbcType=VARCHAR},
        </if>
        <if test="classId != null and classId != ''">
            class_id = #{classId,jdbcType=VARCHAR},
        </if>
        <if test="political != null and political != ''">
            political = #{political,jdbcType=VARCHAR},
        </if>
        <if test="deptId != null and deptId != ''">
            dept_id = #{deptId,jdbcType=VARCHAR},
        </if>
        <if test="entryYear != null and entryYear != ''">
            entry_year = #{entryYear,jdbcType=VARCHAR}
        </if>
    </set>
    where student_no = #{studentNo,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select student_no, student_name, password, gender, birth, email, class_id, political, dept_id,
    entry_year
    from ts_student
    where student_no = #{studentNo,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select student_no, student_name, password, gender, birth, email, class_id, political, dept_id,
    entry_year
    from ts_student
  </select>
  <!-- 批量添加学生 -->
  <insert id="insertStudentBatch">
    insert into ts_student (student_no, student_name, password,
      gender, birth, email, class_id,
      political, dept_id, entry_year
      )
    values
    <foreach collection="students" item="student" separator=",">
    (
      #{student.studentNo,jdbcType=VARCHAR}, #{student.studentName,jdbcType=VARCHAR},
      #{student.password,jdbcType=VARCHAR}, #{student.gender,jdbcType=INTEGER},
      #{student.birth,jdbcType=DATE}, #{student.email,jdbcType=VARCHAR},
      #{student.classId,jdbcType=VARCHAR},#{student.political,jdbcType=VARCHAR},
      #{student.deptId,jdbcType=VARCHAR},#{student.entryYear,jdbcType=VARCHAR}
    )
    </foreach>
  </insert>
  <select id="selectStudentsByDept" resultMap="BaseResultMap">
    select student_no, student_name, password, gender, birth, email, class_id, political, dept_id,
    entry_year
    from ts_student where dept_id = #{deptId, jdbcType=VARCHAR}
  </select>
  <!-- 根据班级获得学生 -->
  <select id="selectStudentsByClass" resultMap="BaseResultMap">
    select student_no, student_name, password, gender, birth, email, class_id, political, dept_id,
    entry_year
    from ts_student where class_id = #{classId,jdbcType=VARCHAR}
  </select>
  <!-- 修改密码 -->
  <update id="updatePassword">
    update ts_student
    set password = #{password,jdbcType=VARCHAR}
    where student_no = #{studentNo,jdbcType=VARCHAR}
  </update>
  <select id="selectStudentsMatchName" resultMap="BaseResultMap">
    select student_no, student_name, password, gender, birth, email, class_id, political, dept_id,
    entry_year
    from ts_student
    where dept_id = #{deptId,jdbcType=VARCHAR} and
    student_name like concat('%', #{name,jdbcType=VARCHAR}, '%')
  </select>
  <select id="selectStudentNamesByIds" resultType="java.util.Map">
    select student_no, student_name, class_id
    from ts_student
    where student_no in
    <foreach collection="studentNos" item="studentNo" open="(" close=")" separator=",">
        #{studentNo,jdbcType=VARCHAR}
    </foreach>
  </select>
  <select id="selectStudentNamesForMapByIds" resultType="java.util.Map">
    select student_no, student_name, class_id
    from ts_student
    where student_no in
    <foreach collection="studentNos" item="studentNo" open="(" close=")" separator=",">
        #{studentNo,jdbcType=VARCHAR}
    </foreach>
  </select>
</mapper>