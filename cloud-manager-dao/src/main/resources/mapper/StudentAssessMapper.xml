<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gwy.manager.mapper.StudentAssessMapper" >
  <resultMap id="BaseResultMap" type="com.gwy.manager.domain.entity.StudentAssess" >
    <id column="student_no" property="studentNo" jdbcType="VARCHAR" />
    <id column="tc_id" property="tcId" jdbcType="VARCHAR" />
    <result column="appraise_score" property="appraiseScore" jdbcType="INTEGER" />
    <result column="submit_time" property="submitTime" jdbcType="TIMESTAMP" />
    <result column="appraise_content" property="appraiseContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from ts_student_assess
    where student_no = #{studentNo,jdbcType=VARCHAR}
      and tc_id = #{tcId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.gwy.manager.domain.entity.StudentAssess" >
    insert into ts_student_assess (student_no, tc_id, appraise_score, 
      submit_time, appraise_content)
    values (#{studentNo,jdbcType=VARCHAR}, #{tcId,jdbcType=VARCHAR}, #{appraiseScore,jdbcType=INTEGER}, 
      #{submitTime,jdbcType=TIMESTAMP}, #{appraiseContent,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.gwy.manager.domain.entity.StudentAssess" >
    update ts_student_assess
    set appraise_score = #{appraiseScore,jdbcType=INTEGER},
      submit_time = #{submitTime,jdbcType=TIMESTAMP},
      appraise_content = #{appraiseContent,jdbcType=LONGVARCHAR}
    where student_no = #{studentNo,jdbcType=VARCHAR}
      and tc_id = #{tcId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select student_no, tc_id, appraise_score, submit_time, appraise_content
    from ts_student_assess
    where student_no = #{studentNo,jdbcType=VARCHAR}
      and tc_id = #{tcId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select student_no, tc_id, appraise_score, submit_time, appraise_content
    from ts_student_assess
  </select>
  <select id="selectByStudentNoAndTerm" resultMap="BaseResultMap">
    select student_no, tc_id, appraise_score, submit_time, appraise_content
    from ts_student_assess
    where student_no = #{studentNo, jdbcType=VARCHAR}
    and tc_id in (select tc_id from ts_teacher_course where term_id = #{termId, jdbcType=VARCHAR})
  </select>
  <select id="selectByTcId" resultMap="BaseResultMap">
    select student_no, tc_id, appraise_score, submit_time, appraise_content
    from ts_student_assess
    where tc_id = #{tcId,jdbcType=VARCHAR}
  </select>
  <select id="selectStateByStudentAndTcIds" resultType="java.lang.Integer">
    select case when appraise_score is null or submit_time is null then 0 else 1 end
    from ts_student_assess where student_no = #{studentNo,jdbcType=VARCHAR}
    and tc_id in
    <foreach collection="tcIds" item="tcId" open="(" close=")" separator=",">
        #{tcId,jdbcType=VARCHAR}
    </foreach>
  </select>
  <select id="selectByTeacherNosAndTerm" resultType="java.util.Map">
    select teacher_no teacherNo, ts_student_assess.tc_id, course_name, sum(appraise_score) studentAppraiseScore, count(appraise_score) studentNum
    from ts_student_assess
    inner join ts_teacher_course
    on ts_student_assess.tc_id = ts_teacher_course.tc_id
    inner join ts_course
    on ts_teacher_course.course_no = ts_course.course_no
    where ts_student_assess.tc_id in (select tc_id
                                      from ts_teacher_course
                                      where term_id = #{termId,jdbcType=VARCHAR})
    and teacher_no in
    <foreach collection="teacherNos" item="teacherNo" open="(" close=")" separator=",">
        #{teacherNo,jdbcType=VARCHAR}
    </foreach>
    group by ts_student_assess.tc_id, course_name
  </select>
</mapper>