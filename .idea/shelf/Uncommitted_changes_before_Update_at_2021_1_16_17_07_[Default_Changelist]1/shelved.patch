Index: cloud-manager-web/src/main/java/com/gwy/manager/mail/MailUtil.java
===================================================================
--- cloud-manager-web/src/main/java/com/gwy/manager/mail/MailUtil.java	(revision 754ee4a6b7c76037dd773bdd6f2a71b3055ac432)
+++ cloud-manager-web/src/main/java/com/gwy/manager/mail/MailUtil.java	(revision 754ee4a6b7c76037dd773bdd6f2a71b3055ac432)
@@ -1,136 +0,0 @@
-package com.gwy.manager.mail;
-
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.beans.factory.annotation.Value;
-import org.springframework.context.annotation.PropertySource;
-import org.springframework.mail.javamail.JavaMailSender;
-import org.springframework.mail.javamail.MimeMessageHelper;
-import org.springframework.stereotype.Component;
-
-import javax.mail.internet.MimeMessage;
-
-/**
- * @author Tracy
- * @date 2020/11/9 16:56
- */
-@Component
-@PropertySource(value = "classpath:mail.properties", encoding = "UTF-8")
-public class MailUtil {
-
-    @Value("${mail.sender}")
-    private String sender;
-
-    @Value("${mail.subject}")
-    private String subject;
-
-    @Autowired
-    private JavaMailSender mailSender;
-
-    /**
-     * 创建复杂邮件实例
-     * @return  创建出邮件
-     */
-    public MimeMessage createMimeMessage() {
-        return mailSender.createMimeMessage();
-    }
-
-    /**
-     * 创建复杂邮件编写工具
-     * @return  返回结果
-     */
-    public MimeMessageHelper newMessageHelper(MimeMessage mimeMessage) {
-        return new MimeMessageHelper(mimeMessage);
-    }
-
-    public void sendMimeMail(MimeMessage mimeMessage) {
-        mailSender.send(mimeMessage);
-    }
-
-    /**
-     * 定义邮件结果前缀
-     * @return  prefix
-     */
-    public String getPrefix() {
-        return "<head>\n" +
-                    "    <base target=\"_blank\" />\n" +
-                    "    <style type=\"text/css\">::-webkit-scrollbar{ display: none; }</style>\n" +
-                    "    <style id=\"cloudAttachStyle\" type=\"text/css\">#divNeteaseBigAttach, #divNeteaseBigAttach_bak{display:none;}</style>\n" +
-                    "    <style id=\"blockquoteStyle\" type=\"text/css\">blockquote{display:none;}</style>\n" +
-                    "    <style type=\"text/css\">\n" +
-                    "        body{font-size:14px;font-family:arial,verdana,sans-serif;line-height:1.666;padding:0;margin:0;overflow:auto;white-space:normal;word-wrap:break-word;min-height:100px}\n" +
-                    "        td, input, button, select, body{font-family:Helvetica, 'Microsoft Yahei', verdana}\n" +
-                    "        pre {white-space:pre-wrap;white-space:-moz-pre-wrap;white-space:-pre-wrap;white-space:-o-pre-wrap;word-wrap:break-word;width:95%}\n" +
-                    "        th,td{font-family:arial,verdana,sans-serif;line-height:1.666}\n" +
-                    "        img{ border:0}\n" +
-                    "        header,footer,section,aside,article,nav,hgroup,figure,figcaption{display:block}\n" +
-                    "        blockquote{margin-right:0px}\n" +
-                    "    </style>\n" +
-                    "</head>\n" +
-                    "<body tabindex=\"0\" role=\"listitem\">\n" +
-                    "<table width=\"700\" border=\"0\" align=\"center\" cellspacing=\"0\" style=\"width:700px;\">\n" +
-                    "    <tbody>\n" +
-                    "    <tr>\n" +
-                    "        <td>\n" +
-                    "            <div style=\"width:700px;margin:0 auto;border-bottom:1px solid #ccc;margin-bottom:30px;\">\n" +
-                    "                <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"700\" height=\"39\" style=\"font:12px Tahoma, Arial, 宋体;\">\n" +
-                    "                    <tbody><tr><td width=\"210\"></td></tr></tbody>\n" +
-                    "                </table>\n" +
-                    "            </div>\n" +
-                    "            <div style=\"width:680px;padding:0 10px;margin:0 auto;\">\n" +
-                    "                <div style=\"line-height:1.5;font-size:14px;margin-bottom:25px;color:#4d4d4d;\">\n" +
-                    "                    <strong style=\"display:block;margin-bottom:15px;\">尊敬的用户：<span style=\"color:#f60;font-size: 16px;\"></span>您好！</strong>\n" +
-                    "                    <strong style=\"display:block;margin-bottom:15px;\">\n" +
-                    "                        您正在进行<span style=\"color: red\">修改密码</span>操作，请于<span style=\"color: red\">5分钟</span>之内在验证码输入框中输入：<span style=\"color:#f60;font-size: 24px\">";
-    }
-
-    /**
-     * 定义邮件返回后缀
-     * @return  suffix
-     */
-    public String getSuffix() {
-        return "</span>，以完成操作。\n" +
-                    "                    </strong>\n" +
-                    "                </div>\n" +
-                    "                <div style=\"margin-bottom:30px;\">\n" +
-                    "                    <small style=\"display:block;margin-bottom:20px;font-size:12px;\">\n" +
-                    "                        <p style=\"color:#747474;\">\n" +
-                    "                            注意：此操作可能会修改您的密码、登录邮箱。如非本人操作，请及时登录并修改密码以保证帐户安全\n" +
-                    "                            <br>（管理员不会向你索取此验证码，请勿泄漏！)\n" +
-                    "                        </p>\n" +
-                    "                    </small>\n" +
-                    "                </div>\n" +
-                    "            </div>\n" +
-                    "            <div style=\"width:700px;margin:0 auto;\">\n" +
-                    "                <div style=\"padding:10px 10px 0;border-top:1px solid #ccc;color:#747474;margin-bottom:20px;line-height:1.3em;font-size:12px;\">\n" +
-                    "                    <p>此为系统邮件，请勿回复。请保管好您的邮箱，避免账号被他人盗用。</p>\n" +
-                    "                    \n" +
-                    "                </div>\n" +
-                    "            </div>\n" +
-                    "\t\t\t<div style=\"width:700px;margin:0 auto;\">\n" +
-                    "                <div style=\"padding:10px 10px 0;border-top:1px solid #ccc;color:#747474;margin-bottom:20px;line-height:1.3em;font-size:12px;\">\n" +
-                    "                    <p>四川师范大学教务处</p>\n" +
-                    "                </div>\n" +
-                    "            </div>\n" +
-                    "        </td>\n" +
-                    "    </tr>\n" +
-                    "    </tbody>\n" +
-                    "</table>\n" +
-                    "</body>\n";
-    }
-
-    public String getSender() {
-        return sender;
-    }
-
-    public void setSender(String sender) {
-        this.sender = sender;
-    }
-
-    public String getSubject() {
-        return subject;
-    }
-
-    public void setSubject(String subject) {
-        this.subject = subject;
-    }
-}
Index: cloud-manager-web/src/main/java/com/gwy/manager/mail/MailForm.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.gwy.manager.mail;\r\n\r\n/**\r\n * @author Tracy\r\n * @date 2020/11/10 15:40\r\n */\r\npublic class MailForm {\r\n    private String subject;\r\n    private String text;\r\n    private String from;\r\n    private String to;\r\n    private boolean html;\r\n\r\n    public MailForm() {\r\n    }\r\n\r\n    public String getSubject() {\r\n        return subject;\r\n    }\r\n\r\n    public void setSubject(String subject) {\r\n        this.subject = subject;\r\n    }\r\n\r\n    public String getText() {\r\n        return text;\r\n    }\r\n\r\n    public void setText(String text) {\r\n        this.text = text;\r\n    }\r\n\r\n    public String getFrom() {\r\n        return from;\r\n    }\r\n\r\n    public void setFrom(String from) {\r\n        this.from = from;\r\n    }\r\n\r\n    public String getTo() {\r\n        return to;\r\n    }\r\n\r\n    public void setTo(String to) {\r\n        this.to = to;\r\n    }\r\n\r\n    public boolean isHtml() {\r\n        return html;\r\n    }\r\n\r\n    public void setHtml(boolean html) {\r\n        this.html = html;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"MailForm{\" +\r\n                \"subject='\" + subject + '\\'' +\r\n                \", text='\" + text + '\\'' +\r\n                \", from='\" + from + '\\'' +\r\n                \", to='\" + to + '\\'' +\r\n                '}';\r\n    }\r\n}\r\n
===================================================================
--- cloud-manager-web/src/main/java/com/gwy/manager/mail/MailForm.java	(revision 754ee4a6b7c76037dd773bdd6f2a71b3055ac432)
+++ cloud-api-common/src/main/java/com/gwy/manager/domain/entity/MailForm.java	(date 1610787490436)
@@ -1,4 +1,4 @@
-package com.gwy.manager.mail;
+package com.gwy.manager.domain.entity;
 
 /**
  * @author Tracy
Index: cloud-manager-auth/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/resources/application.yml	(date 1610787490199)
+++ cloud-manager-auth/src/main/resources/application.yml	(date 1610787490199)
@@ -0,0 +1,41 @@
+spring:
+  # 指定上传文件大小
+  servlet:
+    multipart:
+      max-file-size: 10MB
+      max-request-size: 10MB
+  # redis相关配置
+  redis:
+    host: 39.97.102.209
+    password: GONGRAN0812
+    database: 2
+    port: 6379
+    jedis:
+      pool:
+        max-active: 100
+        max-wait: 5000
+        max-idle: 10
+        min-idle: 0
+
+  # rabbitmq相关配置
+  rabbitmq:
+    host: www.tracys.cn
+    username: tracy
+    password: GONGRAN0812qweabc!
+    port: 6012
+    listener:
+      simple:
+        concurrency: 10
+        max-concurrency: 20
+        prefetch: 50
+
+mybatis:
+  # 指定映射配置文件路径
+  mapper-locations: classpath:mapper/*.xml
+
+
+pagehelper:
+  helper-dialect: mysql
+  reasonable: true
+  support-methods-arguments: true
+  params: count=countSql
\ No newline at end of file
Index: cloud-manager-web/src/main/java/com/gwy/manager/util/MailUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-web/src/main/java/com/gwy/manager/util/MailUtil.java	(date 1610787490216)
+++ cloud-manager-web/src/main/java/com/gwy/manager/util/MailUtil.java	(date 1610787490216)
@@ -0,0 +1,136 @@
+package com.gwy.manager.util;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.context.annotation.PropertySource;
+import org.springframework.mail.javamail.JavaMailSender;
+import org.springframework.mail.javamail.MimeMessageHelper;
+import org.springframework.stereotype.Component;
+
+import javax.mail.internet.MimeMessage;
+
+/**
+ * @author Tracy
+ * @date 2020/11/9 16:56
+ */
+@Component
+@PropertySource(value = "classpath:mail.properties", encoding = "UTF-8")
+public class MailUtil {
+
+    @Value("${mail.sender}")
+    private String sender;
+
+    @Value("${mail.subject}")
+    private String subject;
+
+    @Autowired
+    private JavaMailSender mailSender;
+
+    /**
+     * 创建复杂邮件实例
+     * @return  创建出邮件
+     */
+    public MimeMessage createMimeMessage() {
+        return mailSender.createMimeMessage();
+    }
+
+    /**
+     * 创建复杂邮件编写工具
+     * @return  返回结果
+     */
+    public MimeMessageHelper newMessageHelper(MimeMessage mimeMessage) {
+        return new MimeMessageHelper(mimeMessage);
+    }
+
+    public void sendMimeMail(MimeMessage mimeMessage) {
+        mailSender.send(mimeMessage);
+    }
+
+    /**
+     * 定义邮件结果前缀
+     * @return  prefix
+     */
+    public String getPrefix() {
+        return "<head>\n" +
+                "    <base target=\"_blank\" />\n" +
+                "    <style type=\"text/css\">::-webkit-scrollbar{ display: none; }</style>\n" +
+                "    <style id=\"cloudAttachStyle\" type=\"text/css\">#divNeteaseBigAttach, #divNeteaseBigAttach_bak{display:none;}</style>\n" +
+                "    <style id=\"blockquoteStyle\" type=\"text/css\">blockquote{display:none;}</style>\n" +
+                "    <style type=\"text/css\">\n" +
+                "        body{font-size:14px;font-family:arial,verdana,sans-serif;line-height:1.666;padding:0;margin:0;overflow:auto;white-space:normal;word-wrap:break-word;min-height:100px}\n" +
+                "        td, input, button, select, body{font-family:Helvetica, 'Microsoft Yahei', verdana}\n" +
+                "        pre {white-space:pre-wrap;white-space:-moz-pre-wrap;white-space:-pre-wrap;white-space:-o-pre-wrap;word-wrap:break-word;width:95%}\n" +
+                "        th,td{font-family:arial,verdana,sans-serif;line-height:1.666}\n" +
+                "        img{ border:0}\n" +
+                "        header,footer,section,aside,article,nav,hgroup,figure,figcaption{display:block}\n" +
+                "        blockquote{margin-right:0px}\n" +
+                "    </style>\n" +
+                "</head>\n" +
+                "<body tabindex=\"0\" role=\"listitem\">\n" +
+                "<table width=\"700\" border=\"0\" align=\"center\" cellspacing=\"0\" style=\"width:700px;\">\n" +
+                "    <tbody>\n" +
+                "    <tr>\n" +
+                "        <td>\n" +
+                "            <div style=\"width:700px;margin:0 auto;border-bottom:1px solid #ccc;margin-bottom:30px;\">\n" +
+                "                <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"700\" height=\"39\" style=\"font:12px Tahoma, Arial, 宋体;\">\n" +
+                "                    <tbody><tr><td width=\"210\"></td></tr></tbody>\n" +
+                "                </table>\n" +
+                "            </div>\n" +
+                "            <div style=\"width:680px;padding:0 10px;margin:0 auto;\">\n" +
+                "                <div style=\"line-height:1.5;font-size:14px;margin-bottom:25px;color:#4d4d4d;\">\n" +
+                "                    <strong style=\"display:block;margin-bottom:15px;\">尊敬的用户：<span style=\"color:#f60;font-size: 16px;\"></span>您好！</strong>\n" +
+                "                    <strong style=\"display:block;margin-bottom:15px;\">\n" +
+                "                        您正在进行<span style=\"color: red\">修改密码</span>操作，请于<span style=\"color: red\">5分钟</span>之内在验证码输入框中输入：<span style=\"color:#f60;font-size: 24px\">";
+    }
+
+    /**
+     * 定义邮件返回后缀
+     * @return  suffix
+     */
+    public String getSuffix() {
+        return "</span>，以完成操作。\n" +
+                "                    </strong>\n" +
+                "                </div>\n" +
+                "                <div style=\"margin-bottom:30px;\">\n" +
+                "                    <small style=\"display:block;margin-bottom:20px;font-size:12px;\">\n" +
+                "                        <p style=\"color:#747474;\">\n" +
+                "                            注意：此操作可能会修改您的密码、登录邮箱。如非本人操作，请及时登录并修改密码以保证帐户安全\n" +
+                "                            <br>（管理员不会向你索取此验证码，请勿泄漏！)\n" +
+                "                        </p>\n" +
+                "                    </small>\n" +
+                "                </div>\n" +
+                "            </div>\n" +
+                "            <div style=\"width:700px;margin:0 auto;\">\n" +
+                "                <div style=\"padding:10px 10px 0;border-top:1px solid #ccc;color:#747474;margin-bottom:20px;line-height:1.3em;font-size:12px;\">\n" +
+                "                    <p>此为系统邮件，请勿回复。请保管好您的邮箱，避免账号被他人盗用。</p>\n" +
+                "                    \n" +
+                "                </div>\n" +
+                "            </div>\n" +
+                "\t\t\t<div style=\"width:700px;margin:0 auto;\">\n" +
+                "                <div style=\"padding:10px 10px 0;border-top:1px solid #ccc;color:#747474;margin-bottom:20px;line-height:1.3em;font-size:12px;\">\n" +
+                "                    <p>四川师范大学教务处</p>\n" +
+                "                </div>\n" +
+                "            </div>\n" +
+                "        </td>\n" +
+                "    </tr>\n" +
+                "    </tbody>\n" +
+                "</table>\n" +
+                "</body>\n";
+    }
+
+    public String getSender() {
+        return sender;
+    }
+
+    public void setSender(String sender) {
+        this.sender = sender;
+    }
+
+    public String getSubject() {
+        return subject;
+    }
+
+    public void setSubject(String subject) {
+        this.subject = subject;
+    }
+}
Index: cloud-manager-auth/src/main/resources/db-config.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/resources/db-config.properties	(date 1610787490199)
+++ cloud-manager-auth/src/main/resources/db-config.properties	(date 1610787490199)
@@ -0,0 +1,22 @@
+db.url=jdbc:mysql://cdb-neqw262o.cd.tencentcdb.com:10127/TQMS?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8
+db.driver-class-name=com.mysql.cj.jdbc.Driver
+db.username=root
+db.password=GONGRAN0812qweabc!
+#   数据源其他配置
+db.initialSize=5
+db.minIdle=5
+db.maxActive=20
+db.maxWait=60000
+db.timeBetweenEvictionRunsMillis=60000
+db.minEvictableIdleTimeMillis=300000
+db.validationQuery=SELECT 1 FROM DUAL
+db.testWhileIdle=true
+db.testOnBorrow=false
+db.testOnReturn=false
+db.poolPreparedStatements=true
+#   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
+#   log4j已弃用，SpringBoot底层为slf4j
+db.filters=stat,wall,slf4j
+db.maxPoolPreparedStatementPerConnectionSize=20
+db.useGlobalDataSourceStat=true
+db.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
\ No newline at end of file
Index: cloud-manager-auth/src/main/java/com/gwy/manager/rabbitmq/RabbitmqProducer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/rabbitmq/RabbitmqProducer.java	(date 1610787490192)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/rabbitmq/RabbitmqProducer.java	(date 1610787490192)
@@ -0,0 +1,54 @@
+package com.gwy.manager.rabbitmq;
+
+import com.gwy.manager.config.rabbitmq.RabbitmqConfiguration;
+import com.gwy.manager.domain.entity.MailForm;
+import com.gwy.manager.domain.entity.SysLog;
+import org.springframework.amqp.rabbit.connection.CorrelationData;
+import org.springframework.amqp.rabbit.core.RabbitTemplate;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Component;
+
+import java.util.UUID;
+
+/**
+ * @author Tracy
+ * @date 2020/11/10 14:07
+ */
+@Component
+public class RabbitmqProducer {
+
+    @Autowired
+    private RabbitTemplate rabbitTemplate;
+
+    /**
+     * 邮件生产者，将邮件加入mq中
+     * @param mailForm  邮件表单
+     */
+    public void sendMailToMq(MailForm mailForm) {
+        String uuid = UUID.randomUUID().toString();
+
+        CorrelationData correlationData = new CorrelationData();
+        correlationData.setId(uuid);
+
+        rabbitTemplate.convertAndSend(RabbitmqConfiguration.EXCHANGE,
+                RabbitmqConfiguration.ROUTING_KEY_MAIL,
+                mailForm,
+                correlationData);
+    }
+
+    /**
+     * 生产者添加日志进入消息队列
+     * @param sysLog    日志信息
+     */
+    public void addLog(SysLog sysLog) {
+        String uuid = UUID.randomUUID().toString();
+
+        CorrelationData correlationData = new CorrelationData();
+        correlationData.setId(uuid);
+
+        rabbitTemplate.convertAndSend(RabbitmqConfiguration.EXCHANGE,
+                RabbitmqConfiguration.ROUTING_KEY_LOG,
+                sysLog,
+                correlationData);
+    }
+}
Index: cloud-api-common/src/main/java/com/gwy/manager/domain/security/exception/GlobalAuthorizeException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-api-common/src/main/java/com/gwy/manager/domain/security/exception/GlobalAuthorizeException.java	(date 1610787490151)
+++ cloud-api-common/src/main/java/com/gwy/manager/domain/security/exception/GlobalAuthorizeException.java	(date 1610787490151)
@@ -0,0 +1,17 @@
+package com.gwy.manager.domain.security.exception;
+
+/**
+ * @author Tracy
+ * @date 2020/12/5 15:01
+ */
+public class GlobalAuthorizeException extends RuntimeException {
+
+    /**
+     * 自定义全局认证错误异常
+     * @param message   认证错误信息
+     */
+    public GlobalAuthorizeException(String message) {
+        super(message);
+    }
+
+}
Index: cloud-manager-auth/src/main/java/com/gwy/manager/security/listener/AuthenticationFailureEventListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/security/listener/AuthenticationFailureEventListener.java	(date 1610787490197)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/security/listener/AuthenticationFailureEventListener.java	(date 1610787490197)
@@ -0,0 +1,45 @@
+package com.gwy.manager.security.listener;
+
+import com.gwy.manager.util.DateUtilCustom;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.context.ApplicationListener;
+import org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent;
+import org.springframework.security.core.Authentication;
+import org.springframework.security.web.authentication.WebAuthenticationDetails;
+import org.springframework.stereotype.Component;
+
+/**
+ * 自定义登录失败监听接口
+ *
+ * @author Tracy
+ * @date 2020/11/23 16:28
+ */
+@Component
+public class AuthenticationFailureEventListener implements ApplicationListener<AuthenticationFailureBadCredentialsEvent> {
+
+    private Logger logger = LoggerFactory.getLogger(AuthenticationFailureEventListener.class);
+
+    /**
+     * 自定义登录失败监听方法
+     * @param event 事件
+     */
+    @Override
+    public void onApplicationEvent(AuthenticationFailureBadCredentialsEvent event) {
+
+        Authentication authentication = event.getAuthentication();
+
+        System.out.println(authentication);
+        if (authentication != null) {
+            String username = "";
+            if (authentication.getPrincipal() != null) {
+                username = authentication.getPrincipal().toString();
+            }
+
+            String ip = ((WebAuthenticationDetails) authentication.getDetails()).getRemoteAddress();
+
+            logger.error("username: {} login fail, from {}, at {}", username, ip, DateUtilCustom.getTime());
+        }
+
+    }
+}
Index: cloud-manager-auth/target/classes/db-config.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/target/classes/db-config.properties	(date 1610787490212)
+++ cloud-manager-auth/target/classes/db-config.properties	(date 1610787490212)
@@ -0,0 +1,22 @@
+db.url=jdbc:mysql://cdb-neqw262o.cd.tencentcdb.com:10127/TQMS?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8
+db.driver-class-name=com.mysql.cj.jdbc.Driver
+db.username=root
+db.password=GONGRAN0812qweabc!
+#   数据源其他配置
+db.initialSize=5
+db.minIdle=5
+db.maxActive=20
+db.maxWait=60000
+db.timeBetweenEvictionRunsMillis=60000
+db.minEvictableIdleTimeMillis=300000
+db.validationQuery=SELECT 1 FROM DUAL
+db.testWhileIdle=true
+db.testOnBorrow=false
+db.testOnReturn=false
+db.poolPreparedStatements=true
+#   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
+#   log4j已弃用，SpringBoot底层为slf4j
+db.filters=stat,wall,slf4j
+db.maxPoolPreparedStatementPerConnectionSize=20
+db.useGlobalDataSourceStat=true
+db.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
\ No newline at end of file
Index: cloud-manager-auth/src/main/java/com/gwy/manager/security/handler/CustomizeLoginSuccessHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/security/handler/CustomizeLoginSuccessHandler.java	(date 1610787490196)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/security/handler/CustomizeLoginSuccessHandler.java	(date 1610787490196)
@@ -0,0 +1,47 @@
+package com.gwy.manager.security.handler;
+
+import com.alibaba.fastjson.JSONObject;
+import com.gwy.manager.domain.enums.ResponseDataMsg;
+import com.gwy.manager.service.impl.SysLogServiceImpl;
+import com.gwy.manager.util.ResultVoUtil;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.security.core.Authentication;
+import org.springframework.security.web.authentication.AuthenticationSuccessHandler;
+import org.springframework.stereotype.Component;
+
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+
+/**
+ * @author Tracy
+ * @date 2020/11/21 23:38
+ */
+@Component
+public class CustomizeLoginSuccessHandler implements AuthenticationSuccessHandler {
+
+    @Autowired
+    private SysLogServiceImpl logService;
+
+    /**
+     * 自定义登录成功处理器
+     * @param request   请求体
+     * @param response  响应体
+     * @param authentication    认证信息
+     * @throws IOException  抛出异常
+     * @throws ServletException 异常体
+     */
+    @Override
+    public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response,
+                                        Authentication authentication) throws IOException, ServletException {
+
+        response.setContentType("application/json;charset=UTF-8");
+
+        //添加登录成功日志
+        logService.addLog(request, authentication);
+
+        response.getWriter().write(JSONObject.toJSONString(ResultVoUtil.success(ResponseDataMsg.Success.getMsg())));
+    }
+
+}
Index: cloud-manager-auth/src/main/java/com/gwy/manager/security/exception/GlobalAuthorizeException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/security/exception/GlobalAuthorizeException.java	(date 1610787490194)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/security/exception/GlobalAuthorizeException.java	(date 1610787490194)
@@ -0,0 +1,17 @@
+package com.gwy.manager.security.exception;
+
+/**
+ * @author Tracy
+ * @date 2020/12/5 15:01
+ */
+public class GlobalAuthorizeException extends RuntimeException {
+
+    /**
+     * 自定义全局认证错误异常
+     * @param message   认证错误信息
+     */
+    public GlobalAuthorizeException(String message) {
+        super(message);
+    }
+
+}
Index: cloud-manager-auth/src/main/java/com/gwy/manager/security/listener/AuthenticationSucceedEventListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/security/listener/AuthenticationSucceedEventListener.java	(date 1610787490197)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/security/listener/AuthenticationSucceedEventListener.java	(date 1610787490197)
@@ -0,0 +1,39 @@
+package com.gwy.manager.security.listener;
+
+import com.gwy.manager.util.DateUtilCustom;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.context.ApplicationListener;
+import org.springframework.security.authentication.event.AuthenticationSuccessEvent;
+import org.springframework.security.core.userdetails.User;
+import org.springframework.security.web.authentication.WebAuthenticationDetails;
+import org.springframework.stereotype.Component;
+
+import java.util.Arrays;
+
+/**
+ * 自定义登录成功监听接口
+ *
+ * @author Tracy
+ * @date 2020/11/23 16:27
+ */
+@Component
+public class AuthenticationSucceedEventListener implements ApplicationListener<AuthenticationSuccessEvent> {
+
+    private Logger logger = LoggerFactory.getLogger(AuthenticationSucceedEventListener.class);
+
+    /**
+     * 重写自定义登录成功监听方法
+     * @param event 事件
+     */
+    @Override
+    public void onApplicationEvent(AuthenticationSuccessEvent event) {
+        String username = ((User) event.getAuthentication().getPrincipal()).getUsername();
+
+        String ip = ((WebAuthenticationDetails) event.getAuthentication()
+                .getDetails()).getRemoteAddress();
+
+        String authorities = Arrays.toString(event.getAuthentication().getAuthorities().toArray());
+        logger.info("username: {} login success!, authorities: {}, from ip: {}, at time: {}", username, authorities, ip, DateUtilCustom.getTime());
+    }
+}
Index: cloud-manager-auth/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/target/classes/application.yml	(date 1610787490200)
+++ cloud-manager-auth/target/classes/application.yml	(date 1610787490200)
@@ -0,0 +1,41 @@
+spring:
+  # 指定上传文件大小
+  servlet:
+    multipart:
+      max-file-size: 10MB
+      max-request-size: 10MB
+  # redis相关配置
+  redis:
+    host: 39.97.102.209
+    password: GONGRAN0812
+    database: 2
+    port: 6379
+    jedis:
+      pool:
+        max-active: 100
+        max-wait: 5000
+        max-idle: 10
+        min-idle: 0
+
+  # rabbitmq相关配置
+  rabbitmq:
+    host: www.tracys.cn
+    username: tracy
+    password: GONGRAN0812qweabc!
+    port: 6012
+    listener:
+      simple:
+        concurrency: 10
+        max-concurrency: 20
+        prefetch: 50
+
+mybatis:
+  # 指定映射配置文件路径
+  mapper-locations: classpath:mapper/*.xml
+
+
+pagehelper:
+  helper-dialect: mysql
+  reasonable: true
+  support-methods-arguments: true
+  params: count=countSql
\ No newline at end of file
Index: cloud-manager-auth/src/main/java/com/gwy/manager/controller/LoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/controller/LoginController.java	(date 1610787490191)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/controller/LoginController.java	(date 1610787490191)
@@ -0,0 +1,20 @@
+package com.gwy.manager.controller;
+
+import com.gwy.manager.domain.dto.ResultVO;
+import com.gwy.manager.util.ResultVoUtil;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+/**
+ * @author Tracy
+ * @date 2021/1/16 15:55
+ */
+@RestController
+public class LoginController {
+
+    @GetMapping("/login")
+    public ResultVO login() {
+        return ResultVoUtil.error("Sorry, Not Found Resources");
+    }
+
+}
Index: cloud-manager-auth/src/main/java/com/gwy/manager/security/UserDetailServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/security/UserDetailServiceImpl.java	(date 1610787490193)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/security/UserDetailServiceImpl.java	(date 1610787490193)
@@ -0,0 +1,72 @@
+package com.gwy.manager.security;
+
+import com.gwy.manager.domain.constant.RoleName;
+import com.gwy.manager.domain.entity.Permission;
+import com.gwy.manager.domain.entity.Role;
+import com.gwy.manager.mapper.LoginMapper;
+import com.gwy.manager.mapper.PermissionMapper;
+import com.gwy.manager.mapper.RoleMapper;
+import org.apache.commons.lang3.StringUtils;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.security.core.authority.AuthorityUtils;
+import org.springframework.security.core.userdetails.User;
+import org.springframework.security.core.userdetails.UserDetails;
+import org.springframework.security.core.userdetails.UserDetailsService;
+import org.springframework.security.core.userdetails.UsernameNotFoundException;
+import org.springframework.stereotype.Service;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * @author Tracy
+ * @date 2020/11/23 8:52
+ */
+@Service
+public class UserDetailServiceImpl implements UserDetailsService {
+
+    @Autowired
+    private RoleMapper roleMapper;
+
+    @Autowired
+    private PermissionMapper permissionMapper;
+
+    @Autowired
+    private LoginMapper loginMapper;
+
+    @Override
+    public UserDetails loadUserByUsername(String account) throws UsernameNotFoundException {
+
+        //用户密码
+        String password = loginMapper.selectUserPasswordFromAll(account);
+
+        //判断密码是否为空
+        if (StringUtils.isEmpty(password)) {
+            throw new UsernameNotFoundException(account + " Not Found");
+        }
+
+        List<Role> roleList = roleMapper.selectByUserId(account);
+
+        List<Integer> roleIds = new ArrayList<>();
+        //遍历用户的角色
+        for (Role role : roleList) {
+            roleIds.add(role.getRoleId());
+        }
+
+        //添加角色
+        List<Role> roles = new ArrayList<>(roleList);
+        //添加所有角色的权限
+        List<Permission> permissions = new ArrayList<>(permissionMapper.selectByRoleIds(roleIds));
+
+        StringBuilder sb = new StringBuilder();
+        for (Role role : roles) {
+            sb.append(RoleName.ROLE_PREFIX).append(role.getRoleName()).append(", ");
+        }
+
+        for (Permission permission : permissions) {
+            sb.append(permission.getPermissionUrl()).append(", ");
+        }
+
+        return new User(account, password, AuthorityUtils.commaSeparatedStringToAuthorityList(sb.toString()));
+    }
+}
Index: cloud-manager-auth/src/main/java/com/gwy/manager/security/handler/CustomizeLoginFailureHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/security/handler/CustomizeLoginFailureHandler.java	(date 1610787490195)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/security/handler/CustomizeLoginFailureHandler.java	(date 1610787490195)
@@ -0,0 +1,46 @@
+package com.gwy.manager.security.handler;
+
+import com.alibaba.fastjson.JSONObject;
+import com.gwy.manager.domain.enums.ResponseDataMsg;
+import com.gwy.manager.security.exception.GlobalAuthorizeException;
+import com.gwy.manager.service.impl.SysLogServiceImpl;
+import com.gwy.manager.util.ResultVoUtil;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.security.core.AuthenticationException;
+import org.springframework.security.web.authentication.AuthenticationFailureHandler;
+import org.springframework.stereotype.Component;
+
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+
+/**
+ * @author Tracy
+ * @date 2020/11/22 0:04
+ */
+@Component
+public class CustomizeLoginFailureHandler implements AuthenticationFailureHandler {
+
+    @Autowired
+    private SysLogServiceImpl logService;
+
+    /**
+     * 自定义登录异常
+     * @param request   请求体
+     * @param response  响应体
+     * @param ex    抛出异常
+     * @throws IOException  throwable
+     * @throws ServletException throwable
+     */
+    @Override
+    public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response,
+                                        AuthenticationException ex) throws IOException, ServletException {
+        response.setContentType("application/json;charset=UTF-8");
+
+        //添加登录失败日志
+        logService.addLog(request, new GlobalAuthorizeException(ResponseDataMsg.UserNameORPasswordError.name()));
+
+        response.getWriter().write(JSONObject.toJSONString(ResultVoUtil.error(ResponseDataMsg.UserNameORPasswordError.getMsg())));
+    }
+}
Index: cloud-manager-auth/src/main/java/com/gwy/manager/security/filter/JwtLoginAuthenticationFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/security/filter/JwtLoginAuthenticationFilter.java	(date 1610787490195)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/security/filter/JwtLoginAuthenticationFilter.java	(date 1610787490195)
@@ -0,0 +1,136 @@
+package com.gwy.manager.security.filter;
+
+import com.cxytiandi.encrypt.util.AesEncryptUtils;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.gwy.manager.domain.constant.EncodeConstant;
+import com.gwy.manager.util.JwtTokenUtils;
+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
+import org.springframework.security.core.Authentication;
+import org.springframework.security.core.AuthenticationException;
+import org.springframework.security.core.userdetails.User;
+import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
+
+import javax.servlet.FilterChain;
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * @author Tracy
+ * @date 2020/11/21 23:26
+ */
+public class JwtLoginAuthenticationFilter extends UsernamePasswordAuthenticationFilter {
+
+    private ThreadLocal<Map<String, String>> threadLocal = new ThreadLocal<>();
+
+    private static final String LOGIN_ACCOUNT_KEY = "account";
+    private static final String LOGIN_PASSWORD_KEY = "password";
+
+    /**
+     * 重写解析username方法
+     * @param request   请求体
+     * @return  结果集
+     */
+    @Override
+    protected String obtainUsername(HttpServletRequest request) {
+        String encodedUsername = this.getBodyParams(request).get(LOGIN_ACCOUNT_KEY);
+        try {
+            return AesEncryptUtils.aesDecrypt(encodedUsername, EncodeConstant.SALT);
+        } catch (Exception e) {
+            return super.obtainUsername(request);
+        }
+    }
+
+    /**
+     * 重写解析password的方法
+     * @param request   请求体
+     * @return  结果集
+     */
+    @Override
+    protected String obtainPassword(HttpServletRequest request) {
+        String encodedPassword = this.getBodyParams(request).get(LOGIN_PASSWORD_KEY);
+        try {
+            return AesEncryptUtils.aesDecrypt(encodedPassword, EncodeConstant.SALT);
+        } catch (Exception e) {
+            return super.obtainUsername(request);
+        }
+    }
+
+    @Override
+    public Authentication attemptAuthentication(HttpServletRequest request, HttpServletResponse response) throws AuthenticationException {
+
+        UsernamePasswordAuthenticationToken authRequest = new UsernamePasswordAuthenticationToken(
+                obtainUsername(request), obtainPassword(request), new ArrayList<>());
+
+        setDetails(request, authRequest);
+
+        return this.getAuthenticationManager().authenticate(authRequest);
+    }
+
+    @Override
+    protected void successfulAuthentication(HttpServletRequest request,
+                                            HttpServletResponse response,
+                                            FilterChain chain,
+                                            Authentication authResult) throws IOException, ServletException {
+
+        super.successfulAuthentication(request, response, chain, authResult);
+
+        String username = ((User) authResult.getPrincipal()).getUsername();
+        String token = JwtTokenUtils.createToken(username, false);
+
+        // 返回创建成功的token
+        // 但是这里创建的token只是单纯的token
+        // 按照jwt的规定，最后请求的格式应该是 `Bearer token`
+        String authToken = JwtTokenUtils.TOKEN_PREFIX + token;
+
+        /*
+
+        //将token进行加密
+        String encodedToken;
+        try {
+            encodedToken = AesEncryptUtils.aesEncrypt(authToken, EncodeConstant.SALT);
+        } catch (Exception e) {
+            e.printStackTrace();
+            response.getWriter().write(JSONObject.toJSONString(ResultVoUtil.error("Encode Token Error")));
+            return;
+        }
+
+         */
+
+        response.setHeader(JwtTokenUtils.TOKEN_HEADER, authToken);
+    }
+
+    /**
+     * 自定义请求参数类型
+     * @param request   请求
+     * @return  返回Map
+     */
+    @SuppressWarnings("unchecked")
+    private Map<String, String> getBodyParams(HttpServletRequest request) {
+
+        Map<String, String> bodyParams = threadLocal.get();
+
+        if (bodyParams == null) {
+            ObjectMapper objectMapper = new ObjectMapper();
+
+            try (InputStream is = request.getInputStream()) {
+                bodyParams = objectMapper.readValue(is, Map.class);
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+
+            if (bodyParams == null) {
+                bodyParams = new HashMap<>(4);
+            }
+
+            threadLocal.set(bodyParams);
+        }
+
+        return bodyParams;
+    }
+}
Index: cloud-manager-auth/src/main/java/com/gwy/manager/security/AppWebSecurityConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/security/AppWebSecurityConfig.java	(date 1610787490193)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/security/AppWebSecurityConfig.java	(date 1610787490193)
@@ -0,0 +1,78 @@
+package com.gwy.manager.security;
+
+import com.gwy.manager.domain.constant.PassRequestPaths;
+import com.gwy.manager.security.filter.JwtLoginAuthenticationFilter;
+import com.gwy.manager.security.handler.CustomizeLoginFailureHandler;
+import com.gwy.manager.security.handler.CustomizeLoginSuccessHandler;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;
+import org.springframework.security.config.annotation.web.builders.HttpSecurity;
+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
+import org.springframework.security.config.http.SessionCreationPolicy;
+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
+import org.springframework.security.crypto.password.PasswordEncoder;
+import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
+
+
+/**
+ * @author Tracy
+ * @date 2020/11/21 23:19
+ */
+@Configuration
+@EnableWebSecurity
+@EnableGlobalMethodSecurity(prePostEnabled = true)
+public class AppWebSecurityConfig extends WebSecurityConfigurerAdapter {
+
+    @Autowired
+    UserDetailServiceImpl userDetailService;
+
+    @Autowired
+    CustomizeLoginSuccessHandler customizeLoginSuccessHandler;
+
+    @Autowired
+    CustomizeLoginFailureHandler customizeLoginFailureHandler;
+
+    @Override
+    protected void configure(AuthenticationManagerBuilder auth) throws Exception {
+        //自定义用户验证和加密方式
+        auth.userDetailsService(userDetailService).passwordEncoder(passwordEncoder());
+    }
+
+    @Override
+    protected void configure(HttpSecurity http) throws Exception {
+
+        http.addFilterAt(jwtLoginFilterBean(), UsernamePasswordAuthenticationFilter.class);
+        http
+                // 定义哪些URL需要被保护、哪些不需要被保护
+                //不需要保护的URL
+                .authorizeRequests().antMatchers(PassRequestPaths.LOGIN_REQUEST).permitAll()
+                //.authorizeRequests().antMatchers("/**").permitAll()
+                .anyRequest().authenticated()
+                .and()
+                .logout().permitAll() // 登出
+                .invalidateHttpSession(true)
+                .and()
+                //不需要session
+                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)
+                .and()
+                .csrf().disable();
+    }
+
+    private JwtLoginAuthenticationFilter jwtLoginFilterBean() throws Exception {
+        JwtLoginAuthenticationFilter jwtLoginAuthenticationFilter = new JwtLoginAuthenticationFilter();
+        jwtLoginAuthenticationFilter.setAuthenticationManager(authenticationManager());
+        jwtLoginAuthenticationFilter.setAuthenticationSuccessHandler(customizeLoginSuccessHandler);
+        jwtLoginAuthenticationFilter.setAuthenticationFailureHandler(customizeLoginFailureHandler);
+        return jwtLoginAuthenticationFilter;
+    }
+
+    @Bean
+    public PasswordEncoder passwordEncoder() {
+        return new BCryptPasswordEncoder();
+    }
+
+}
Index: cloud-manager-auth/src/main/java/com/gwy/manager/config/rabbitmq/RabbitmqConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/config/rabbitmq/RabbitmqConfiguration.java	(date 1610787490190)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/config/rabbitmq/RabbitmqConfiguration.java	(date 1610787490190)
@@ -0,0 +1,50 @@
+package com.gwy.manager.config.rabbitmq;
+
+import org.springframework.amqp.support.converter.Jackson2JsonMessageConverter;
+import org.springframework.amqp.support.converter.MessageConverter;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+
+
+/**
+ * @author Tracy
+ * @date 2020/11/9 23:22
+ */
+@Configuration
+public class RabbitmqConfiguration {
+
+    /**
+     * 交换器
+     */
+    public static final String EXCHANGE            =     "exchange.tracy";
+
+    /**
+     * 邮件队列
+     */
+    public static final String QUEUE_MAIL          =     "queue.mail";
+
+    /**
+     * 日志队列
+     */
+    public static final String QUEUE_LOG           =     "queue.log";
+
+    /**
+     * 邮件路由
+     */
+    public static final String ROUTING_KEY_MAIL    =     "queue.mail";
+
+    /**
+     * 日志路由
+     */
+    public static final String ROUTING_KEY_LOG     =     "queue.log";
+
+    /**
+     * 配置rabbitmq的转换器
+     * @return  转化器
+     */
+    @Bean
+    public MessageConverter messageConverter() {
+        return new Jackson2JsonMessageConverter();
+    }
+
+}
Index: cloud-manager-auth/src/main/java/com/gwy/manager/service/impl/SysLogServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/service/impl/SysLogServiceImpl.java	(date 1610787490198)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/service/impl/SysLogServiceImpl.java	(date 1610787490198)
@@ -0,0 +1,275 @@
+package com.gwy.manager.service.impl;
+
+import com.alibaba.fastjson.JSONObject;
+import com.github.pagehelper.PageHelper;
+import com.github.pagehelper.PageInfo;
+import com.gwy.manager.domain.constant.PassRequestPaths;
+import com.gwy.manager.domain.constant.RoleName;
+import com.gwy.manager.domain.dto.ResultVO;
+import com.gwy.manager.domain.entity.SysLog;
+import com.gwy.manager.domain.enums.ResponseDataMsg;
+import com.gwy.manager.domain.enums.ResponseStatus;
+import com.gwy.manager.domain.enums.SysLogType;
+import com.gwy.manager.mapper.SysLogMapper;
+import com.gwy.manager.rabbitmq.RabbitmqProducer;
+import com.gwy.manager.service.SysLogService;
+import com.gwy.manager.util.DateUtilCustom;
+import com.gwy.manager.util.PageHelperUtil;
+import com.gwy.manager.util.ResultVoUtil;
+import org.apache.commons.collections4.CollectionUtils;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.security.core.Authentication;
+import org.springframework.security.core.GrantedAuthority;
+import org.springframework.security.core.userdetails.User;
+import org.springframework.security.web.authentication.WebAuthenticationDetails;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.Date;
+import java.util.List;
+import java.util.Locale;
+import java.util.Map;
+
+/**
+ * @author Tracy
+ * @date 2020/12/5 13:07
+ */
+@Service
+public class SysLogServiceImpl implements SysLogService {
+
+    private static final String POST = "POST";
+
+    @Autowired
+    private SysLogMapper sysLogMapper;
+
+    @Autowired
+    private RabbitmqProducer producer;
+
+    /**
+     * 使用日志工具记录日志
+     * @param request   请求
+     * @param args  参数
+     * @param resultVO  请求返回结果
+     */
+    @Override
+    public void recordLog(HttpServletRequest request, Object[] args, ResultVO resultVO) {
+        SysLog sysLog = new SysLog();
+
+        String url = request.getRequestURL().toString();
+        Locale locale = request.getLocale();
+
+        sysLog.setRequestUrl(url);
+        sysLog.setLocale(locale.toString());
+
+        Authentication authentication = (Authentication) request.getUserPrincipal();
+        if (authentication != null) {
+            String userId = ((User) authentication.getPrincipal()).getUsername();
+            sysLog.setUserId(userId);
+            sysLog.setAuthorities(Arrays.toString(this.getRoleFromAuthorities(authentication.getAuthorities()).toArray()));
+            sysLog.setIp(((WebAuthenticationDetails)authentication.getDetails()).getRemoteAddress());
+        }
+
+        sysLog.setParams(JSONObject.toJSONString(args));
+
+        //设置返回信息
+        sysLog.setResultMessage(resultVO.getMessage());
+
+        //如果返回状态码为错误
+        if (!resultVO.getResultCode().equals(ResponseStatus.SUCCESS.getCode())) {
+            String errData = JSONObject.toJSONString(resultVO.getData().toString());
+            errData = errData.substring(1, errData.length() - 1);
+
+            //判断错误是否匹配
+            boolean match = false;
+            for (ResponseDataMsg value : ResponseDataMsg.values()) {
+                if (errData.equals(value.getMsg())) {
+                    match = true;
+                    sysLog.setDataExplain(errData);
+                    sysLog.setDataExplain(value.getExplain());
+                    break;
+                }
+            }
+
+            if (!match) {
+                sysLog.setData(ResponseDataMsg.Fail.getMsg());
+                sysLog.setDataExplain(ResponseDataMsg.Fail.getExplain());
+            }
+        } else {
+            //设置状态码为成功
+            sysLog.setData(ResponseDataMsg.Success.getMsg());
+            sysLog.setDataExplain(ResponseDataMsg.Success.getExplain());
+        }
+
+        sysLog.setType(SysLogType.OperationLog.getType());
+        sysLog.setTypeExplain(SysLogType.OperationLog.getTypeExplain());
+        sysLog.setCreateTime(DateUtilCustom.getTime());
+
+        producer.addLog(sysLog);
+    }
+
+    /**
+     * 添加日志
+     * @param sysLog    预添加的日志
+     */
+    @Override
+    public void insertLog(SysLog sysLog) {
+        sysLogMapper.insert(sysLog);
+    }
+
+    @Override
+    public ResultVO getLogTypeAndCount() {
+
+        List<Map<String, Object>> types = sysLogMapper.selectDataExplainAndCount();
+        if (CollectionUtils.isEmpty(types)) {
+            return ResultVoUtil.error(ResponseDataMsg.NotFound.getMsg());
+        } else {
+            return ResultVoUtil.success(types);
+        }
+    }
+
+    @Override
+    public ResultVO getLogInfoByType(String type, int pageNum, int pageSize) {
+
+        PageHelper.startPage(pageNum, pageSize);
+
+        List<SysLog> sysLogs = sysLogMapper.selectByType(type);
+        if (CollectionUtils.isEmpty(sysLogs)) {
+            return ResultVoUtil.error(ResponseDataMsg.NotFound.getMsg());
+        } else {
+            return ResultVoUtil.success(PageHelperUtil.pageInfoToMap(new PageInfo<>(sysLogs)));
+        }
+
+    }
+
+    @Transactional(rollbackFor = {Exception.class})
+    @Override
+    public ResultVO deleteByBatch(List<Integer> ids) {
+
+        int i = sysLogMapper.deleteByPrimaryKeys(ids);
+        if (i != ids.size()) {
+            return ResultVoUtil.error(ResponseDataMsg.Fail.getMsg());
+        }
+
+        return ResultVoUtil.success(ResponseDataMsg.Success.getMsg());
+    }
+
+    @Override
+    public ResultVO getLogByInterval(Date beginTime, Date endTime, String type) {
+
+        List<SysLog> sysLogs = sysLogMapper.selectByInterval(beginTime, endTime, type);
+        if (CollectionUtils.isEmpty(sysLogs)) {
+            return ResultVoUtil.error(ResponseDataMsg.NotFound.getMsg());
+        }
+
+        return ResultVoUtil.success(sysLogs);
+    }
+
+    @Override
+    public ResultVO getLogs(int pageNum, int pageSize) {
+
+        List<SysLog> sysLogs = sysLogMapper.selectAll();
+        if (CollectionUtils.isEmpty(sysLogs)) {
+            return ResultVoUtil.error(ResponseDataMsg.NotFound.getMsg());
+        } else {
+            return ResultVoUtil.success(sysLogs);
+        }
+    }
+
+    @Override
+    public ResultVO getLogsInfo() {
+
+        List<Map<Date, Integer>> maps = sysLogMapper.selectLogsInfo();
+        if (CollectionUtils.isEmpty(maps)) {
+            return ResultVoUtil.error(ResponseDataMsg.NotFound.getMsg());
+        }
+
+        return ResultVoUtil.success(sysLogMapper.selectLogsInfo());
+    }
+
+    /**
+     * 系统操作成功，添加日志
+     * @param request   请求
+     * @param authentication    认证信息
+     */
+    public void addLog(HttpServletRequest request, Authentication authentication) {
+        this.addLog(request, authentication, null);
+    }
+
+    /**
+     * 系统操作异常，添加日志
+     * @param request   请求
+     * @param ex    异常
+     */
+    public void addLog(HttpServletRequest request, Exception ex) {
+        this.addLog(request, null, ex);
+    }
+
+    /**
+     * 添加日志
+     * @param request   本次请求
+     * @param authentication    用户授权
+     * @param ex    发生异常
+     */
+    private void addLog(HttpServletRequest request, Authentication authentication, Exception ex) {
+        SysLog sysLog = new SysLog();
+
+        sysLog.setRequestUrl(request.getRequestURL().toString());
+        sysLog.setLocale(request.getLocale().toString());
+        sysLog.setIp(request.getRemoteAddr());
+
+        //默认请求成功
+        sysLog.setResultMessage(ResponseStatus.SUCCESS.getMessage());
+        sysLog.setData(ResponseDataMsg.Success.getMsg());
+        sysLog.setDataExplain(ResponseDataMsg.Success.getExplain());
+
+        //判断是否为登录请求
+        if (sysLog.getRequestUrl().endsWith(PassRequestPaths.LOGIN_REQUEST) && request.getMethod().equals(POST)) {
+            sysLog.setType(SysLogType.LoginLog.getType());
+            sysLog.setTypeExplain(SysLogType.LoginLog.getTypeExplain());
+        } else {
+            sysLog.setType(SysLogType.OperationLog.getType());
+            sysLog.setTypeExplain(SysLogType.OperationLog.getTypeExplain());
+        }
+
+        //如果有认证信息
+        if (authentication != null) {
+            sysLog.setUserId(((User) authentication.getPrincipal()).getUsername());
+            sysLog.setAuthorities(Arrays.toString(this.getRoleFromAuthorities(authentication.getAuthorities()).toArray()));
+        }
+
+        //如果有访问异常
+        if (ex != null) {
+            sysLog.setResultMessage(ResponseStatus.FAIL.getMessage());
+            ResponseDataMsg msg = ResponseDataMsg.valueOf(ex.getMessage());
+            sysLog.setData(msg.getMsg());
+            sysLog.setDataExplain(msg.getExplain());
+            sysLog.setType(SysLogType.SystemLog.getType());
+            sysLog.setTypeExplain(SysLogType.SystemLog.getTypeExplain());
+        }
+
+        sysLog.setCreateTime(DateUtilCustom.getTime());
+
+        //生产者添加日志到消息队列
+        producer.addLog(sysLog);
+    }
+
+    /**
+     * 从权限、角色中提取出角色
+     * @param authorities   权限+角色列表
+     * @return  结果集
+     */
+    private List<GrantedAuthority> getRoleFromAuthorities(Collection<? extends GrantedAuthority> authorities) {
+        //仅提取出用户的角色用作记录日志
+        List<GrantedAuthority> authorityList = new ArrayList<>();
+        for (GrantedAuthority authority : authorities) {
+            if (authority.getAuthority().startsWith(RoleName.ROLE_PREFIX)) {
+                authorityList.add(authority);
+            }
+        }
+        return authorityList;
+    }
+}
Index: cloud-manager-auth/src/main/java/com/gwy/manager/service/SysLogService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/service/SysLogService.java	(date 1610787490198)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/service/SysLogService.java	(date 1610787490198)
@@ -0,0 +1,74 @@
+package com.gwy.manager.service;
+
+import com.gwy.manager.domain.dto.ResultVO;
+import com.gwy.manager.domain.entity.SysLog;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.Date;
+import java.util.List;
+
+/**
+ * @author Tracy
+ * @date 2020/12/5 13:06
+ */
+public interface SysLogService {
+
+    /**
+     * 使用日志工具记录日志
+     * @param request   请求
+     * @param args  参数
+     * @param resultVO  请求返回结果
+     */
+    void recordLog(HttpServletRequest request, Object[] args, ResultVO resultVO);
+
+    /**
+     * 添加日志
+     * @param sysLog    预添加的日志
+     */
+    void insertLog(SysLog sysLog);
+
+    /**
+     * 获得每类日志的数量
+     * @return  结果集
+     */
+    ResultVO getLogTypeAndCount();
+
+    /**
+     * 通过日志类型获得日志
+     * @param type  关键字
+     * @param pageNum   页码
+     * @param pageSize  页大小
+     * @return  结果集
+     */
+    ResultVO getLogInfoByType(String type, int pageNum, int pageSize);
+
+    /**
+     * 批量删除日志
+     * @param ids   id
+     * @return  结果集
+     */
+    ResultVO deleteByBatch(List<Integer> ids);
+
+    /**
+     * 获得指定时间内的指定时间内的日志，用于导出
+     * @param beginTime 开始时间
+     * @param endTime   结束时间
+     * @param type  日志类型
+     * @return  结果集
+     */
+    ResultVO getLogByInterval(Date beginTime, Date endTime, String type);
+
+    /**
+     * 分页获得日志
+     * @param pageNum   页码
+     * @param pageSize  每页个数
+     * @return  结果集
+     */
+    ResultVO getLogs(int pageNum, int pageSize);
+
+    /**
+     * 获得日志信息(天数，日志数量)
+     * @return  结果集
+     */
+    ResultVO getLogsInfo();
+}
Index: cloud-manager-auth/src/main/java/com/gwy/manager/config/redis/RedisConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/config/redis/RedisConfiguration.java	(date 1610787490190)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/config/redis/RedisConfiguration.java	(date 1610787490190)
@@ -0,0 +1,81 @@
+package com.gwy.manager.config.redis;
+
+import com.fasterxml.jackson.annotation.JsonAutoDetect;
+import com.fasterxml.jackson.annotation.JsonTypeInfo;
+import com.fasterxml.jackson.annotation.PropertyAccessor;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.cache.CacheManager;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.redis.cache.RedisCacheConfiguration;
+import org.springframework.data.redis.cache.RedisCacheManager;
+import org.springframework.data.redis.connection.RedisConnectionFactory;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;
+import org.springframework.data.redis.serializer.RedisSerializationContext;
+import org.springframework.data.redis.serializer.RedisSerializer;
+import org.springframework.data.redis.serializer.StringRedisSerializer;
+
+import java.time.Duration;
+
+/**
+ * @author Tracy
+ * @date 2020/11/9 9:30
+ */
+@Configuration
+public class RedisConfiguration {
+
+    @Bean
+    @ConditionalOnMissingBean(name = "redisTemplate")
+    public RedisTemplate<String, Object> redisTemplate(RedisConnectionFactory redisConnectionFactory) {
+        RedisTemplate<String, Object> template = new RedisTemplate<>();
+        template.setConnectionFactory(redisConnectionFactory);
+
+        //使用Jackson2JsonRedisSerializer来序列化和反序列化redis的value值
+        Jackson2JsonRedisSerializer<Object> jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer<>(Object.class);
+
+        configureRedisSerializer(jackson2JsonRedisSerializer);
+
+        StringRedisSerializer stringRedisSerializer = new StringRedisSerializer();
+        //使用StringRedisSerializer来序列化和反序列化redis的key值
+        template.setKeySerializer(stringRedisSerializer);
+        // hash的key也采用String的序列化方式
+        template.setHashKeySerializer(stringRedisSerializer);
+        // value序列化方式采用jackson
+        template.setValueSerializer(jackson2JsonRedisSerializer);
+        // hash的value序列化方式采用jackson
+        template.setHashValueSerializer(jackson2JsonRedisSerializer);
+        template.afterPropertiesSet();
+        return template;
+    }
+
+    @Bean
+    public CacheManager cacheManager(RedisConnectionFactory factory) {
+        RedisSerializer<String> redisSerializer = new StringRedisSerializer();
+        Jackson2JsonRedisSerializer<Object> serializer = new Jackson2JsonRedisSerializer<>(Object.class);
+
+        configureRedisSerializer(serializer);
+
+        // 配置序列化
+        RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig()
+                .entryTtl(Duration.ofSeconds(3600 * 12L))
+                .serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(redisSerializer))
+                .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(serializer));
+
+        return RedisCacheManager.builder(factory)
+                .cacheDefaults(config)
+                .build();
+    }
+
+    private void configureRedisSerializer(Jackson2JsonRedisSerializer<Object> jackson2JsonRedisSerializer) {
+        //解决查询缓存转换异常的问题
+        ObjectMapper om = new ObjectMapper();
+        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);
+        om.activateDefaultTyping(LaissezFaireSubTypeValidator.instance,
+                ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.PROPERTY);
+        jackson2JsonRedisSerializer.setObjectMapper(om);
+
+    }
+}
Index: cloud-manager-auth/src/main/java/com/gwy/manager/config/db/DataBaseConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cloud-manager-auth/src/main/java/com/gwy/manager/config/db/DataBaseConfiguration.java	(date 1610787490189)
+++ cloud-manager-auth/src/main/java/com/gwy/manager/config/db/DataBaseConfiguration.java	(date 1610787490189)
@@ -0,0 +1,69 @@
+package com.gwy.manager.config.db;
+
+import com.alibaba.druid.pool.DruidDataSource;
+import com.alibaba.druid.support.http.StatViewServlet;
+import com.alibaba.druid.support.http.WebStatFilter;
+import org.springframework.boot.context.properties.ConfigurationProperties;
+import org.springframework.boot.web.servlet.FilterRegistrationBean;
+import org.springframework.boot.web.servlet.ServletRegistrationBean;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.PropertySource;
+
+import javax.servlet.Filter;
+import javax.servlet.Servlet;
+import javax.sql.DataSource;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * @author Tracy
+ * @date 2020/11/1 16:46
+ */
+@Configuration
+@PropertySource({"classpath:db-config.properties"})
+public class DataBaseConfiguration {
+
+    @Bean
+    @ConfigurationProperties(prefix = "db")
+    public DataSource dataSource() {
+        return new DruidDataSource();
+    }
+
+    /**
+     * 配置Druid的监控
+     * 配置后台的servlet
+     * @return  servlet
+     */
+    public ServletRegistrationBean<Servlet> statViewServlet() {
+        ServletRegistrationBean<Servlet> servletRegistrationBean =
+                new ServletRegistrationBean<>(new StatViewServlet(), "/druid/*");
+
+        Map<String, String> map = new HashMap<>(5);
+        map.put("loginUsername","admin");
+        map.put("loginPassword", "123456");
+
+        //默认允许所有
+        map.put("allow","127.0.0.1");
+
+        servletRegistrationBean.setInitParameters(map);
+        return servletRegistrationBean;
+    }
+
+    /**
+     * 配置后台的filter
+     * @return  filter
+     */
+    public FilterRegistrationBean<Filter> webStatFilter() {
+        FilterRegistrationBean<Filter> bean = new FilterRegistrationBean<>();
+        bean.setFilter(new WebStatFilter());
+
+        Map<String, String> map = new HashMap<>(5);
+        bean.setInitParameters(map);
+        map.put("exclusions","*.js,*.css,/druid/*");
+        bean.setUrlPatterns(Collections.singletonList("/*"));
+        return bean;
+    }
+
+}
diff --git cloud-manager-web/src/main/resources/mapper/StudentMapper.xml cloud-api-common/src/main/resources/mapper/StudentMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/StudentMapper.xml
rename to cloud-api-common/src/main/resources/mapper/StudentMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/StudentClassMapper.xml cloud-api-common/src/main/resources/mapper/StudentClassMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/StudentClassMapper.xml
rename to cloud-api-common/src/main/resources/mapper/StudentClassMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/SysPermissionApiMapper.xml cloud-api-common/src/main/resources/mapper/SysPermissionApiMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/SysPermissionApiMapper.xml
rename to cloud-api-common/src/main/resources/mapper/SysPermissionApiMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/SysLogMapper.xml cloud-api-common/src/main/resources/mapper/SysLogMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/SysLogMapper.xml
rename to cloud-api-common/src/main/resources/mapper/SysLogMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/RoleMapper.xml cloud-api-common/src/main/resources/mapper/RoleMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/RoleMapper.xml
rename to cloud-api-common/src/main/resources/mapper/RoleMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/PermissionMapper.xml cloud-api-common/src/main/resources/mapper/PermissionMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/PermissionMapper.xml
rename to cloud-api-common/src/main/resources/mapper/PermissionMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/StudentAssessMapper.xml cloud-api-common/src/main/resources/mapper/StudentAssessMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/StudentAssessMapper.xml
rename to cloud-api-common/src/main/resources/mapper/StudentAssessMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/RolePermissionMapper.xml cloud-api-common/src/main/resources/mapper/RolePermissionMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/RolePermissionMapper.xml
rename to cloud-api-common/src/main/resources/mapper/RolePermissionMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/CourseMapper.xml cloud-api-common/src/main/resources/mapper/CourseMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/CourseMapper.xml
rename to cloud-api-common/src/main/resources/mapper/CourseMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/MajorMapper.xml cloud-api-common/src/main/resources/mapper/MajorMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/MajorMapper.xml
rename to cloud-api-common/src/main/resources/mapper/MajorMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/DeptMapper.xml cloud-api-common/src/main/resources/mapper/DeptMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/DeptMapper.xml
rename to cloud-api-common/src/main/resources/mapper/DeptMapper.xml
diff --git cloud-manager-web/target/classes/mapper/RolePermissionMapper.xml cloud-api-common/target/classes/mapper/RolePermissionMapper.xml
rename from cloud-manager-web/target/classes/mapper/RolePermissionMapper.xml
rename to cloud-api-common/target/classes/mapper/RolePermissionMapper.xml
diff --git cloud-manager-web/target/classes/mapper/RoleMapper.xml cloud-api-common/target/classes/mapper/RoleMapper.xml
rename from cloud-manager-web/target/classes/mapper/RoleMapper.xml
rename to cloud-api-common/target/classes/mapper/RoleMapper.xml
diff --git cloud-manager-web/target/classes/mapper/StudentClassMapper.xml cloud-api-common/target/classes/mapper/StudentClassMapper.xml
rename from cloud-manager-web/target/classes/mapper/StudentClassMapper.xml
rename to cloud-api-common/target/classes/mapper/StudentClassMapper.xml
diff --git cloud-manager-web/target/classes/mapper/StudentAssessMapper.xml cloud-api-common/target/classes/mapper/StudentAssessMapper.xml
rename from cloud-manager-web/target/classes/mapper/StudentAssessMapper.xml
rename to cloud-api-common/target/classes/mapper/StudentAssessMapper.xml
diff --git cloud-manager-web/target/classes/mapper/DeptMapper.xml cloud-api-common/target/classes/mapper/DeptMapper.xml
rename from cloud-manager-web/target/classes/mapper/DeptMapper.xml
rename to cloud-api-common/target/classes/mapper/DeptMapper.xml
diff --git cloud-manager-web/target/classes/mapper/CourseMapper.xml cloud-api-common/target/classes/mapper/CourseMapper.xml
rename from cloud-manager-web/target/classes/mapper/CourseMapper.xml
rename to cloud-api-common/target/classes/mapper/CourseMapper.xml
diff --git cloud-manager-web/target/classes/mapper/PermissionMapper.xml cloud-api-common/target/classes/mapper/PermissionMapper.xml
rename from cloud-manager-web/target/classes/mapper/PermissionMapper.xml
rename to cloud-api-common/target/classes/mapper/PermissionMapper.xml
diff --git cloud-manager-web/target/classes/mapper/MajorMapper.xml cloud-api-common/target/classes/mapper/MajorMapper.xml
rename from cloud-manager-web/target/classes/mapper/MajorMapper.xml
rename to cloud-api-common/target/classes/mapper/MajorMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/UserMapper.xml cloud-api-common/src/main/resources/mapper/UserMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/UserMapper.xml
rename to cloud-api-common/src/main/resources/mapper/UserMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/TermTargetMapper.xml cloud-api-common/src/main/resources/mapper/TermTargetMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/TermTargetMapper.xml
rename to cloud-api-common/src/main/resources/mapper/TermTargetMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/UserRoleMapper.xml cloud-api-common/src/main/resources/mapper/UserRoleMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/UserRoleMapper.xml
rename to cloud-api-common/src/main/resources/mapper/UserRoleMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/TeacherAssessMapper.xml cloud-api-common/src/main/resources/mapper/TeacherAssessMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/TeacherAssessMapper.xml
rename to cloud-api-common/src/main/resources/mapper/TeacherAssessMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/TargetMapper.xml cloud-api-common/src/main/resources/mapper/TargetMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/TargetMapper.xml
rename to cloud-api-common/src/main/resources/mapper/TargetMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/TermMapper.xml cloud-api-common/src/main/resources/mapper/TermMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/TermMapper.xml
rename to cloud-api-common/src/main/resources/mapper/TermMapper.xml
diff --git cloud-manager-web/src/main/resources/mapper/TeacherCourseMapper.xml cloud-api-common/src/main/resources/mapper/TeacherCourseMapper.xml
rename from cloud-manager-web/src/main/resources/mapper/TeacherCourseMapper.xml
rename to cloud-api-common/src/main/resources/mapper/TeacherCourseMapper.xml
diff --git cloud-manager-web/target/classes/mapper/UserRoleMapper.xml cloud-api-common/target/classes/mapper/UserRoleMapper.xml
rename from cloud-manager-web/target/classes/mapper/UserRoleMapper.xml
rename to cloud-api-common/target/classes/mapper/UserRoleMapper.xml
diff --git cloud-manager-web/target/classes/mapper/UserMapper.xml cloud-api-common/target/classes/mapper/UserMapper.xml
rename from cloud-manager-web/target/classes/mapper/UserMapper.xml
rename to cloud-api-common/target/classes/mapper/UserMapper.xml
diff --git cloud-manager-web/target/classes/mapper/TeacherCourseMapper.xml cloud-api-common/target/classes/mapper/TeacherCourseMapper.xml
rename from cloud-manager-web/target/classes/mapper/TeacherCourseMapper.xml
rename to cloud-api-common/target/classes/mapper/TeacherCourseMapper.xml
diff --git cloud-manager-web/target/classes/mapper/TeacherAssessMapper.xml cloud-api-common/target/classes/mapper/TeacherAssessMapper.xml
rename from cloud-manager-web/target/classes/mapper/TeacherAssessMapper.xml
rename to cloud-api-common/target/classes/mapper/TeacherAssessMapper.xml
diff --git cloud-manager-web/target/classes/mapper/TermTargetMapper.xml cloud-api-common/target/classes/mapper/TermTargetMapper.xml
rename from cloud-manager-web/target/classes/mapper/TermTargetMapper.xml
rename to cloud-api-common/target/classes/mapper/TermTargetMapper.xml
diff --git cloud-manager-web/target/classes/mapper/TermMapper.xml cloud-api-common/target/classes/mapper/TermMapper.xml
rename from cloud-manager-web/target/classes/mapper/TermMapper.xml
rename to cloud-api-common/target/classes/mapper/TermMapper.xml
diff --git cloud-manager-web/target/classes/mapper/SysLogMapper.xml cloud-api-common/target/classes/mapper/SysLogMapper.xml
rename from cloud-manager-web/target/classes/mapper/SysLogMapper.xml
rename to cloud-api-common/target/classes/mapper/SysLogMapper.xml
diff --git cloud-manager-web/target/classes/mapper/StudentMapper.xml cloud-api-common/target/classes/mapper/StudentMapper.xml
rename from cloud-manager-web/target/classes/mapper/StudentMapper.xml
rename to cloud-api-common/target/classes/mapper/StudentMapper.xml
diff --git cloud-manager-web/target/classes/mapper/TargetMapper.xml cloud-api-common/target/classes/mapper/TargetMapper.xml
rename from cloud-manager-web/target/classes/mapper/TargetMapper.xml
rename to cloud-api-common/target/classes/mapper/TargetMapper.xml
diff --git cloud-manager-web/target/classes/mapper/SysPermissionApiMapper.xml cloud-api-common/target/classes/mapper/SysPermissionApiMapper.xml
rename from cloud-manager-web/target/classes/mapper/SysPermissionApiMapper.xml
rename to cloud-api-common/target/classes/mapper/SysPermissionApiMapper.xml
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/StudentAssessMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/StudentAssessMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/StudentAssessMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/StudentAssessMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/RolePermissionMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/RolePermissionMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/RolePermissionMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/RolePermissionMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/StudentMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/StudentMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/StudentMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/StudentMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/StudentClassMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/StudentClassMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/StudentClassMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/StudentClassMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/MajorMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/MajorMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/MajorMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/MajorMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/LoginMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/LoginMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/LoginMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/LoginMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/RoleMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/RoleMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/RoleMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/RoleMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/PermissionMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/PermissionMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/PermissionMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/PermissionMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/DeptMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/DeptMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/DeptMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/DeptMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/CourseMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/CourseMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/CourseMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/CourseMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/UserRoleMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/UserRoleMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/UserRoleMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/UserRoleMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/TermMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/TermMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/TermMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/TermMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/TeacherCourseMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/TeacherCourseMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/TeacherCourseMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/TeacherCourseMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/UserMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/UserMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/UserMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/UserMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/TermTargetMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/TermTargetMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/TermTargetMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/TermTargetMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/SysPermissionApiMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/SysPermissionApiMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/SysPermissionApiMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/SysPermissionApiMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/SysLogMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/SysLogMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/SysLogMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/SysLogMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/TeacherAssessMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/TeacherAssessMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/TeacherAssessMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/TeacherAssessMapper.java
diff --git cloud-manager-web/src/main/java/com/gwy/manager/mapper/TargetMapper.java cloud-api-common/src/main/java/com/gwy/manager/mapper/TargetMapper.java
rename from cloud-manager-web/src/main/java/com/gwy/manager/mapper/TargetMapper.java
rename to cloud-api-common/src/main/java/com/gwy/manager/mapper/TargetMapper.java
